name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]  # Define Python versions here
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}  # Use matrix value

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install docker-compose -y

      - name: Start LocalStack with Docker Compose
        run: docker-compose up -d

      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack to start..."
          sleep 15  # Adjust if needed

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install behave  # Install behave for BDD testing

      - name: Set Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_ENDPOINT_URL=http://localhost:4566" >> $GITHUB_ENV
          echo "SHIPPING_TABLE_NAME=ShippingTable" >> $GITHUB_ENV
          echo "SHIPPING_QUEUE_NAME=ShippingQueue" >> $GITHUB_ENV

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run pylint
        run: | 
          pylint --fail-under 6 app
          exitcode="$?"
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          exit "$exitcode"

      - name: Run unit tests
        run: |
          python -m unittest discover -s tests/units -p "test_*.py" -v

      - name: Run BDD tests
        run: |
          behave tests/bdd_features

      - name: Run integration tests
        run: |
          pytest --maxfail=1 --disable-warnings -v
          coverage run -m pytest && coverage report -m

      - name: Teardown Docker
        if: always()
        run: docker-compose down